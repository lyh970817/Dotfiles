priority 99

global !p
import os
from vimsnippets import complete

FIELD_TYPES = [
'character',
'data.frame',
'integer',
'list',
'logical',
'matrix',
'numeric',
'vector']
endglobal

snippet as "Apply type on variable" w
as.$1`!p snip.rv = complete(t[1], FIELD_TYPES)`($2${VISUAL})
endsnippet

snippet is "Test type on variable" w
is.$1`!p snip.rv = complete(t[1], FIELD_TYPES)`($2${VISUAL})
endsnippet

snippet ifs "If statement" Ai
if ($1) ${0:${VISUAL}}
endsnippet

snippet if "If statement" i
if ($1) {
	${0:${VISUAL}}
}
endsnippet

snippet eif "Else-If statement" i
else if ($1) {
	${0:${VISUAL}}
}
endsnippet

snippet else "Else statement" i
else {
	${0:${VISUAL}}
}
endsnippet

snippet ifel "if .. else" i
if ($1) {
	${2:${VISUAL}}
} else {
	$0
}
endsnippet

snippet ife "ifelse" i
ifelse($1)
endsnippet

snippet while "while loop" i
while($1) {
	${0:${VISUAL}}
}
endsnippet

snippet for "for loop" i
for (${1:item} in ${2:list}) {
	${0:${VISUAL}}
}
endsnippet

snippet function "Function definition" i
${1:name} <- function($2) {
	${0:${VISUAL}}
}
endsnippet

snippet fun "Short function definition" i
function($2) {
	${0:${VISUAL}}
}
endsnippet

snippet ggpl "ggplot2 plot" i
ggplot(${1:${VISUAL:data}}, aes(${0:aesthetics}))
endsnippet




#################################

#  easily create string vector  #
#################################
# Given individual words separated by spaces
# Select words (e.g. shift-v for whole line (such as the line above)
# then press <Tab> then type "vec", press <Tab> again to get this:
# var <- c("#","Given","individual","words","separated","by","spaces")
# var <- c("#","type","out","individual","words","separated","by","spaces")
snippet vec
${1:var} <- c("${0:${VISUAL:/ /","/g}}")
endsnippet
